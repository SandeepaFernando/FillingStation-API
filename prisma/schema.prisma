// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id               BigInt      @id @default(autoincrement())
  userName         String      @unique @db.VarChar(255)
  nic              String?     @db.VarChar(255)
  userRole         Int         @default(1)
  cashInHand       Decimal     @default(0)
  password         String
  createdAt        DateTime    @default(now())
  lastUpdatedAt    DateTime    @default(now())
  createdVendors   vendors[]   @relation("createdUser")
  updatedVendors   vendors[]   @relation("updatedUser")
  createdCustomers customers[] @relation("customerCreatedUser")
  updatedCustomers customers[] @relation("customerUpdatedUser")
  branches         branches[]
  items            items[]
  tanks            tanks[]
}

model vendors {
  id            BigInt   @id @default(autoincrement())
  vendorName    String   @db.VarChar(255)
  address       String?
  email         String?  @db.VarChar(255)
  phone         String?  @db.VarChar(255)
  balance       Decimal  @default(0)
  createdUserId BigInt
  updatedUserId BigInt
  createdBy     users    @relation("createdUser", fields: [createdUserId], references: [id])
  updatedBy     users    @relation("updatedUser", fields: [updatedUserId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())
  items         items[]
}

model branches {
  id         BigInt   @id @default(autoincrement())
  branchName String   @db.VarChar(255)
  phone      String?  @db.VarChar(255)
  address    String?
  user       users    @relation(fields: [usersId], references: [id])
  usersId    BigInt
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
}

model pumpOperators {
  id        BigInt   @id @default(autoincrement())
  name      String   @db.VarChar(255)
  address   String?
  phone     String?  @db.VarChar(255)
  nic       String?  @db.VarChar(255)
  balance   Decimal  @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model customers {
  id             BigInt   @id @default(autoincrement())
  customerName   String   @db.VarChar(255)
  address        String?
  phone          String?  @db.VarChar(255)
  email          String?  @db.VarChar(255)
  nic            String?  @db.VarChar(255)
  customerNature Int?
  balance        Decimal? @default(0)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now())
  createdUserId  BigInt
  updatedUserId  BigInt
  createdBy      users    @relation("customerCreatedUser", fields: [createdUserId], references: [id])
  updatedBy      users    @relation("customerUpdatedUser", fields: [updatedUserId], references: [id])
}

model items {
  id              BigInt   @id @default(autoincrement())
  vendor          vendors  @relation(fields: [vendorsId], references: [id])
  itemName        String   @db.VarChar(255)
  qty             Int?     @default(0)
  min             Int?     @default(0)
  max             Int?     @default(0)
  cost            Decimal? @default(0)
  sellingPrice    Decimal  @default(0)
  measurementType Int?
  editable        Boolean
  updatedBy       users    @relation(fields: [usersId], references: [id])
  updatedAt       DateTime @default(now())
  vendorsId       BigInt
  usersId         BigInt
  tanks           tanks[]
}

model tanks {
  id        BigInt   @id @default(autoincrement())
  remainQty Decimal  @default(0)
  item      items    @relation(fields: [itemsId], references: [id])
  createdBy users    @relation(fields: [usersId], references: [id])
  updatedAt DateTime @default(now())
  itemsId   BigInt
  usersId   BigInt
}
